// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
