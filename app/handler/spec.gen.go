// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"BPXAQY76rj2nL4SDwdrgfwEAAP//yNSpIf01AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
