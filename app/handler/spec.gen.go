// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
