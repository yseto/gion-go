// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"0Q/WBv8NAAD//6sXxqS/NQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
