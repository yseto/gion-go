// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
