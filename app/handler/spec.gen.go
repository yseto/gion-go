// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"dtQD9py+EA4Ga4NvAwAA///+ZVyQ5jUAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
