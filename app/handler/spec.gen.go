// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"NQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
