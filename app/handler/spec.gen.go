// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"F8JBvBZ/GwAA///rbqxzyTUAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
