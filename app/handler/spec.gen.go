// Package handler provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package handler

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"q57vLzj6werg/wEAAP//Sgjk0dE1AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
